---
- block:
    - name: CERTS | Install certs for each Apache vhost or Nginx server block
      command: "certbot -n --agree-tos --{{ letsencrypt_webserver }} --expand -d {{ item.value.domain }} {% for rewrite in item.value.rewrites|default() %} -d {{ rewrite }} {% endfor %}"
      with_dict: "{{ letsencrypt_certificates }}"
      when: letsencrypt_autoinstall and item.value.webroot is undefined

    - name: CERTS | Generate certs for each Apache vhost or Nginx server block
      command: "certbot -n --agree-tos --{{ letsencrypt_webserver }} certonly --expand -d {{ item.value.domain }} {% for rewrite in item.value.rewrites|default() %} -d {{ rewrite }} {% endfor %}"
      with_dict: "{{ letsencrypt_certificates }}"
      when: letsencrypt_certonly and item.value.webroot is undefined

    - name: CERTS | Create certs when using webroot
      command: "certbot certonly -n --agree-tos --webroot {{ item.value.webroot }} --expand -d {{ item.value.domain }} {% for rewrite in item.value.rewrites|default() %} -d {{ rewrite }} {% endfor %}"
      with_dict: "{{ letsencrypt_certificates }}"
      when: item.value.webroot is defined

  when: letsencrypt_webserver == "nginx" or letsencrypt_webserver == "apache"

- block:
    - name: CERTS | Stop webserver
      service:
        name: "{{ letsencrypt_webserver }}"
        state: stopped
      when: letsencrypt_webserver != ""

    - name: CERTS | Create certs when using certonly
      command: "certbot certonly -n --agree-tos --standalone --expand -d {{ item.value.domain }} {% for rewrite in item.value.rewrites|default() %} -d {{ rewrite }} {% endfor %}"
      with_dict: "{{ letsencrypt_certificates }}"

    - name: CERTS | Start webserver
      service:
        name: "{{ letsencrypt_webserver }}"
        state: started
      when: letsencrypt_webserver != ""

  when: letsencrypt_standalone or letsencrypt_webserver == ""
